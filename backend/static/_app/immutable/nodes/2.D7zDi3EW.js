import{f as x,a as v}from"../chunks/CO5X12ro.js";import{i as R}from"../chunks/BhebSDih.js";import{p as W,t as p,a as q,$ as E,c as s,s as c,r as l,g as i,m as g,b as r}from"../chunks/DZq78Ezw.js";import{h as L,e as B,s as m}from"../chunks/sKjDUr9k.js";import{i as w}from"../chunks/BQGRK2Qk.js";import{g as z}from"../chunks/BLi00ybJ.js";import{B as G}from"../chunks/QH1VciTq.js";var H=x('<div class="p-3 bg-green-50 border border-green-200 rounded-lg"><p class="text-sm text-green-800"><strong>Selected file:</strong> </p></div>'),I=x('<div class="p-3 bg-red-50 border border-red-200 rounded-lg"><p class="text-sm text-red-800"> </p></div>'),J=x('<div class="p-3 bg-green-50 border border-green-200 rounded-lg"><p class="text-sm text-green-800"> </p></div>'),K=x('<div class="min-h-screen flex items-center justify-center bg-gray-100 px-4 py-8"><div class="w-full max-w-md"><div class="bg-white rounded-lg shadow-md p-6"><h1 class="text-2xl font-bold text-gray-900 mb-6 text-center">Select Database File</h1> <div class="space-y-4"><div><label for="file-input" class="block text-sm font-medium text-gray-700 mb-2">Choose Database File (.db)</label> <input id="file-input" type="file" accept=".db" class="w-full px-3 py-2 bg-white border border-gray-300 rounded-lg shadow-sm file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-blue-50 file:text-blue-700 hover:file:bg-blue-100 transition-colors disabled:opacity-50"/></div> <!> <!> <!> <button class="w-full py-2 px-4 bg-blue-500 hover:bg-blue-600 disabled:bg-blue-300 text-white font-medium rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors"> </button></div></div></div></div>');function Q(h,$){W($,!1);let n=g(null),f=g(!1),o=g(""),b=g("");const M=e=>{var d;const t=e.target,a=((d=t.files)==null?void 0:d[0])||null;r(n,a),r(o,""),r(b,""),a&&!a.name.endsWith(".db")&&(r(o,"Please select a valid .db file."),r(n,null),t.value="")},N=async()=>{if(!i(n)){r(o,"Please select a .db file first.");return}r(f,!0),r(o,""),r(b,"");try{const e=new FormData;e.append("file",i(n));const t=await fetch(`${G}/db-path`,{method:"POST",body:e,credentials:"include"});if(t.ok)r(b,"Database file uploaded successfully!"),setTimeout(()=>{z("/login")},1e3);else{const a=await t.text();r(o,`Upload failed (${t.status}). ${a}`)}}catch(e){e instanceof Error?r(o,`Network error: ${e.message}. Please try again.`):r(o,"Network error: An unknown error occurred. Please try again.")}finally{r(f,!1)}};R();var _=K();L(e=>{E.title="Select Database File"});var D=s(_),S=s(D),F=c(s(S),2),y=s(F),k=c(s(y),2);l(y);var P=c(y,2);{var T=e=>{var t=H(),a=s(t),d=c(s(a));l(a),l(t),p(()=>m(d,` ${i(n).name??""}`)),v(e,t)};w(P,e=>{i(n)&&e(T)})}var U=c(P,2);{var j=e=>{var t=I(),a=s(t),d=s(a,!0);l(a),l(t),p(()=>m(d,i(o))),v(e,t)};w(U,e=>{i(o)&&e(j)})}var A=c(U,2);{var C=e=>{var t=J(),a=s(t),d=s(a,!0);l(a),l(t),p(()=>m(d,i(b))),v(e,t)};w(A,e=>{i(b)&&e(C)})}var u=c(A,2),O=s(u,!0);l(u),l(F),l(S),l(D),l(_),p(()=>{k.disabled=i(f),u.disabled=!i(n)||i(f),m(O,i(f)?"Uploading...":"Upload Database")}),B("change",k,M),B("click",u,N),v(h,_),q()}function re(h){L($=>{E.title="Select Database File"}),Q(h,{})}export{re as component};
